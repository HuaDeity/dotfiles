// vim: set ft=jsonc:
// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the
// command palette (cmd-shift-p / ctrl-shift-p)
{
  "theme": {
    "mode": "system",
    "light": "Catppuccin Latte",
    "dark": "Catppuccin Mocha"
  },
  "icon_theme": {
    "mode": "system",
    "light": "Catppuccin Latte",
    "dark": "Catppuccin Mocha"
  },
  "buffer_font_family": "Monaspace Neon Var",
  "buffer_font_fallbacks": ["Monaspace Neon"],
  "buffer_font_features": {
    "calt": true,
    "liga": true,
    "ss01": true,
    "ss02": true,
    "ss03": true,
    "cv01": 2
  },
  "buffer_font_size": 13,
  "pane_split_direction_horizontal": "down",
  "pane_split_direction_vertical": "right",
  "vim_mode": true,
  "auto_signature_help": true,
  "title_bar": {
    "show_branch_icon": true
  },
  "minimap": {
    "show": "auto",
    "thumb": "hover",
    "thumb_border": "none"
  },
  "indent_guides": {
    "coloring": "indent_aware"
    // "background_coloring": "indent_aware"
  },
  "vertical_scroll_margin": 1,
  "autoscroll_on_clicks": true,
  "horizontal_scroll_margin": 2,
  "use_smartcase_search": true,
  "inlay_hints": {
    "enabled": true
  },
  "agent": {
    "default_model": {
      "provider": "copilot_chat",
      "model": "claude-sonnet-4"
    },
    "always_allow_tool_actions": true
  },
  "autosave": {
    "after_delay": {
      "milliseconds": 1000
    }
  },
  "tabs": {
    "git_status": false,
    "file_icons": true,
    "show_diagnostics": "all"
  },
  "diagnostics": {
    "cargo": {
      "fetch_cargo_diagnostics": true
    },
    "inline": {
      "enabled": true
    }
  },
  "git": {
    "inline_blame": {
      "show_commit_summary": true
    }
  },
  "edit_predictions": {
    "mode": "subtle"
  },
  "terminal": {
    "option_as_meta": true,
    "copy_on_select": true,
    "detect_venv": {
      "on": {
        "activate_script": "fish"
      }
    }
  },
  "file_types": {
    "Python constraints": [
      "*constraints*.txt"
    ],
    "Python requirements": [
      "**/requirements/*.{in,txt}",
      "*requirements*.{in,txt}"
    ],
    "TOML": ["tmpl"]
  },
  "auto_install_extensions": {
    "basedpyright": true,
    "basher": true,
    "biome": true,
    "catppuccin": true,
    "catppuccin-icons": true,
    "docker-compose": true,
    "dockerfile": true,
    "env": true,
    "fish": true,
    "git-firefly": true,
    "html": true,
    "just": true,
    "latex": true,
    "log": true,
    "ltex": true,
    "lua": true,
    "markdown-oxide": true,
    "marksman": true,
    "pyrefly": true,
    "python-requirements": true,
    "nix": true,
    "perplexity": true,
    "rainbow-csv": true,
    "ruby": true,
    "ruff": true,
    "snippets": true,
    "superhtml": true,
    "swift": true,
    "toml": true,
    "ty": true,
    "tree-sitter-query": true,
    "wakatime": true,
    "xml": true,
    "zig": true
  },
  "languages": {
    "fish": {
      "formatter": {
        "external": {
          "command": "fish_indent"
        }
      }
    },
    "HTML": {
      "language_servers": ["vscode-html-language-server", "superhtml"],
      "formatter": { "language_server": { "name": "superhtml" } }
    },
    "JSON": {
      "prettier": {
        "allowed": false
      },
      "formatter": [
        {
          "code_actions": {
            "source.fixAll.biome": true,
            "source.organizeImports.biome": true
          }
        },
        {
          "language_server": {
            "name": "biome"
          }
        }
      ]
    },
    "JSONC": {
      "prettier": {
        "allowed": false
      },
      "formatter": [
        {
          "code_actions": {
            "source.fixAll.biome": true,
            "source.organizeImports.biome": true
          }
        },
        {
          "language_server": {
            "name": "biome"
          }
        }
      ]
    },
    "Lua": {
      "formatter": {
        "external": {
          "command": "stylua",
          "arguments": [
            "--respect-ignores",
            "--stdin-filepath",
            "{buffer_path}",
            "-"
          ]
        }
      }
    },
    "Markdown": {
      "language_servers": ["marksman", "markdown-oxide"]
    },
    "Nix": {
      "language_servers": ["nixd", "nil"],
      "formatter": {
        "external": {
          "command": "alejandra",
          "arguments": ["--quiet", "--"]
        }
      }
    },
    "Python": {
      "language_servers": ["basedpyright", "!pyrefly", "ty", "ruff"],
      "formatter": [
        {
          "code_actions": {
            "source.fixAll.ruff": true,
            "source.organizeImports.ruff": true
          }
        },
        {
          "language_server": {
            "name": "ruff"
          }
        }
      ]
    },
    "Ruby": {
      "language_servers": ["ruby-lsp", "rubocop", "!solargraph"]
    },
    "Shell Script": {
      "formatter": {
        "external": {
          "command": "shfmt",
          // Change `--indent 2` to match your preferred tab_size
          "arguments": ["--filename", "{buffer_path}", "--indent", "2"]
        }
      },
      "tab_size": 2
    }
  },
  "language_models": {
    "openai": {
      "api_url": "https://openrouter.ai/api/v1"
    }
  },
  "lsp": {
    "basedpyright": {
      "settings": {
        "basedpyright.analysis": {
          "typeCheckingMode": "off"
        },
        "basedpyright.disableOrganizeImports": true
      }
    },
    // "biome": {
    //   "settings": {
    //     "require_config_file": true
    //   }
    // },
    "pyrefly": {
      "settings": {
        "python": {
          "pyrefly": {
            "disableTypeErrors": true
          }
        }
      }
    },
    "rubocop": {
      "initialization_options": {
        "safeAutocorrect": false
      },
      "settings": {
        "use_bundler": false
      }
    },
    "ruby-lsp": {
      "initialization_options": {
        "enabledFeatures": {
          // This disables diagnostics
          "diagnostics": false
        }
      },
      "settings": {
        "use_bundler": false
      }
    },
    "rust-analyzer": {
      "check": {
        "command": "clippy"
      },
      "initialization_options": {
        "cargo": {
          "targetDir": true
        },
        "inlayHints": {
          "maxLength": null,
          "lifetimeElisionHints": {
            "enable": "skip_trivial",
            "useParameterNames": true
          },
          "closureReturnTypeHints": {
            "enable": "always"
          }
        }
      }
    },
    "ty": {
      "binary": {
        "path": "ty",
        "arguments": ["server"]
      },
      "initialization_options": {
        "settings": {
          "python": {
            "ty": {
              "disableLanguageServices": true
            }
          }
        }
      }
    },
    "yaml-language-server": {
      "settings": {
        "yaml": {
          "keyOrdering": false
        }
      }
    }
  },
  "vim": {
    "toggle_relative_line_numbers": true,
    "use_smartcase_find": true
  },
  "ssh_connections": [
    {
      "host": "10342",
      "projects": [
        {
          "paths": [
            "~/Projects/ViS2O"
          ]
        }
      ]
    },
    {
      "host": "10351",
      "projects": [
        {
          "paths": [
            "~/Projects/ViS2O"
          ]
        }
      ]
    },
    {
      "host": "10354",
      "projects": [
        {
          "paths": [
            "~/Projects/ViS2O"
          ]
        }
      ]
    },
    {
      "host": "10356",
      "projects": [
        {
          "paths": [
            "~/Projects/ViS2O"
          ]
        }
      ]
    },
    {
      "host": "10357",
      "projects": [
        {
          "paths": [
            "~/Projects/ViS2O"
          ]
        }
      ]
    },
    {
      "host": "10358",
      "projects": [
        {
          "paths": [
            "~/Projects/ViS2O"
          ]
        }
      ]
    }
  ],
  "context_servers": {
    "mcp-server-github": {
      "source": "extension",
      "settings": {
        // biome-ignore format
        "github_personal_access_token": "{{ doppler "GITHUB_ACCESS_TOKEN" }}"
      }
    }
  }
}
